#!/bin/bash

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If there are no go files, it makes no sense to run the other commands
# (and indeed, go build would fail). This is undesirable.
if [ -z "$(ls | grep '\.go$')" ]
then
	exit 0
fi

go build ./... >/dev/null 2>&1
if [ $? -ne 0 ]
then
	echo "Failed to build project. Please check the output of"
	echo "go build or run commit with --no-verify if you know"
	echo "what you are doing."
	exit 1
fi

go test ./... >/dev/null 2>&1
if [ $? -ne 0 ]
then
	echo "Failed to run tests. Please check the output of"
	echo "go test or run commit with --no-verify if you know"
	echo "what you are doing."
	exit 1
fi

go fmt ./... >/dev/null 2>&1
if [ $? -ne 0 ]
then
	echo "Failed to run go fmt. This shouldn't happen. Please"
	echo "check the output of the command to see what's wrong"
	echo "or run commit with --no-verify if you know what you"
	echo "are doing."

	exit 1
fi

go vet ./... >/dev/null 2>&1
if [ $? -ne 0 ]
then
	echo "go vet has detected potential issues in your project."
	echo "Please check its output or run commit with --no-verify"
	echo "if you know what you are doing."
	exit 1
fi
